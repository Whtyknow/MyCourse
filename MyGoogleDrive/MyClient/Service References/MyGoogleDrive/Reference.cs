//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyClient.MyGoogleDrive {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyGoogleDrive.IDrive")]
    public interface IDrive {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/Login", ReplyAction="http://tempuri.org/IDrive/LoginResponse")]
        bool Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/Login", ReplyAction="http://tempuri.org/IDrive/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/LoadFile", ReplyAction="http://tempuri.org/IDrive/LoadFileResponse")]
        bool LoadFile(string name, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/LoadFile", ReplyAction="http://tempuri.org/IDrive/LoadFileResponse")]
        System.Threading.Tasks.Task<bool> LoadFileAsync(string name, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/DownloadFile", ReplyAction="http://tempuri.org/IDrive/DownloadFileResponse")]
        byte[] DownloadFile(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/DownloadFile", ReplyAction="http://tempuri.org/IDrive/DownloadFileResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadFileAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/GetFiles", ReplyAction="http://tempuri.org/IDrive/GetFilesResponse")]
        System.IO.FileInfo[] GetFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrive/GetFiles", ReplyAction="http://tempuri.org/IDrive/GetFilesResponse")]
        System.Threading.Tasks.Task<System.IO.FileInfo[]> GetFilesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDriveChannel : MyClient.MyGoogleDrive.IDrive, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DriveClient : System.ServiceModel.ClientBase<MyClient.MyGoogleDrive.IDrive>, MyClient.MyGoogleDrive.IDrive {
        
        public DriveClient() {
        }
        
        public DriveClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DriveClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DriveClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DriveClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public bool LoadFile(string name, byte[] data) {
            return base.Channel.LoadFile(name, data);
        }
        
        public System.Threading.Tasks.Task<bool> LoadFileAsync(string name, byte[] data) {
            return base.Channel.LoadFileAsync(name, data);
        }
        
        public byte[] DownloadFile(string name) {
            return base.Channel.DownloadFile(name);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadFileAsync(string name) {
            return base.Channel.DownloadFileAsync(name);
        }
        
        public System.IO.FileInfo[] GetFiles() {
            return base.Channel.GetFiles();
        }
        
        public System.Threading.Tasks.Task<System.IO.FileInfo[]> GetFilesAsync() {
            return base.Channel.GetFilesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyGoogleDrive.IAuth")]
    public interface IAuth {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuth/Register", ReplyAction="http://tempuri.org/IAuth/RegisterResponse")]
        bool Register(string login, string password, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuth/Register", ReplyAction="http://tempuri.org/IAuth/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string login, string password, string role);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthChannel : MyClient.MyGoogleDrive.IAuth, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthClient : System.ServiceModel.ClientBase<MyClient.MyGoogleDrive.IAuth>, MyClient.MyGoogleDrive.IAuth {
        
        public AuthClient() {
        }
        
        public AuthClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string login, string password, string role) {
            return base.Channel.Register(login, password, role);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string login, string password, string role) {
            return base.Channel.RegisterAsync(login, password, role);
        }
    }
}
